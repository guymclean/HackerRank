import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    static String gameOfThrones(String s){
        
        // char counts holds each character in the string and its frequency
        HashMap<Character, Integer> charCounts = new HashMap<>();
        for (char c: s.toCharArray()) {
            if (charCounts.containsKey(c)) {
                charCounts.put(c, charCounts.get(c)+1);
            } else {
                charCounts.put(c, 1);
            }
        }
        
        int oddCount = 0;
        
        // for the anagram to be able to be a palindrome,
        // only one of the count values can be odd
        for (int value: charCounts.values()) {
            if (value % 2 != 0) oddCount++;
        }
        
        return (oddCount <= 1) ? "YES" : "NO";
    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String s = in.next();
        String result = gameOfThrones(s);
        System.out.println(result);
    }
}
